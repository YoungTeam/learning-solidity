{
	"id": "b9c12b23c9578dc746af8439180e77dd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"ErrorHandling.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\n\ncontract ErrorHandling{\n    uint num = 222;\n\n    error MyError(address _addr,uint i);\n\n    function testRequire(uint i) public pure {\n        require(i <= 10, \"i is greater than 10\");\n    }\n\n    function testRevert(uint i) public pure {\n        if (i > 10) {\n            revert(\"i is greater than 10\");\n        }\n    }\n\n    function testAssert() public view {\n        assert(num == 222);\n    }\n\n    function testCustomError(uint i) public view {\n        if (i > 10) {\n            revert MyError(msg.sender, i);\n        }\n    }\n}"
			}
		}
	},
	"output": {
		"contracts": {
			"ErrorHandling.sol": {
				"ErrorHandling": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "i",
									"type": "uint256"
								}
							],
							"name": "MyError",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "testAssert",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "i",
									"type": "uint256"
								}
							],
							"name": "testCustomError",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "i",
									"type": "uint256"
								}
							],
							"name": "testRequire",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "i",
									"type": "uint256"
								}
							],
							"name": "testRevert",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ErrorHandling.sol\":56:584  contract ErrorHandling{... */\n  mstore(0x40, 0x80)\n    /* \"ErrorHandling.sol\":95:98  222 */\n  0xde\n    /* \"ErrorHandling.sol\":84:98  uint num = 222 */\n  0x00\n  sstore\n    /* \"ErrorHandling.sol\":56:584  contract ErrorHandling{... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ErrorHandling.sol\":56:584  contract ErrorHandling{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x20987767\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2b813bc0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x75f7286c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xb8bd717f\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ErrorHandling.sol\":251:374  function testRevert(uint i) public pure {... */\n    tag_3:\n      tag_7\n      tag_8\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      stop\n        /* \"ErrorHandling.sol\":380:449  function testAssert() public view {... */\n    tag_4:\n      tag_7\n      tag_12\n      jump\t// in\n        /* \"ErrorHandling.sol\":455:582  function testCustomError(uint i) public view {... */\n    tag_5:\n      tag_7\n      tag_14\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_14:\n      tag_15\n      jump\t// in\n        /* \"ErrorHandling.sol\":251:374  function testRevert(uint i) public pure {... */\n    tag_10:\n        /* \"ErrorHandling.sol\":309:311  10 */\n      0x0a\n        /* \"ErrorHandling.sol\":305:306  i */\n      dup2\n        /* \"ErrorHandling.sol\":305:311  i > 10 */\n      gt\n        /* \"ErrorHandling.sol\":301:368  if (i > 10) {... */\n      iszero\n      tag_20\n      jumpi\n        /* \"ErrorHandling.sol\":327:357  revert(\"i is greater than 10\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":680:682   */\n      0x20\n        /* \"ErrorHandling.sol\":327:357  revert(\"i is greater than 10\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":662:683   */\n      mstore\n        /* \"#utility.yul\":719:721   */\n      0x14\n        /* \"#utility.yul\":699:717   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":692:722   */\n      mstore\n      shl(0x64, 0x0692069732067726561746572207468616e20313)\n        /* \"#utility.yul\":738:756   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":731:781   */\n      mstore\n        /* \"#utility.yul\":798:816   */\n      0x64\n      add\n        /* \"ErrorHandling.sol\":327:357  revert(\"i is greater than 10\") */\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ErrorHandling.sol\":301:368  if (i > 10) {... */\n    tag_20:\n        /* \"ErrorHandling.sol\":251:374  function testRevert(uint i) public pure {... */\n      pop\n      jump\t// out\n        /* \"ErrorHandling.sol\":380:449  function testAssert() public view {... */\n    tag_12:\n        /* \"ErrorHandling.sol\":431:434  num */\n      sload(0x00)\n        /* \"ErrorHandling.sol\":438:441  222 */\n      0xde\n        /* \"ErrorHandling.sol\":431:441  num == 222 */\n      eq\n        /* \"ErrorHandling.sol\":424:442  assert(num == 222) */\n      tag_25\n      jumpi\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n        /* \"ErrorHandling.sol\":380:449  function testAssert() public view {... */\n      jump\t// out\n        /* \"ErrorHandling.sol\":455:582  function testCustomError(uint i) public view {... */\n    tag_15:\n        /* \"ErrorHandling.sol\":518:520  10 */\n      0x0a\n        /* \"ErrorHandling.sol\":514:515  i */\n      dup2\n        /* \"ErrorHandling.sol\":514:520  i > 10 */\n      gt\n        /* \"ErrorHandling.sol\":510:576  if (i > 10) {... */\n      iszero\n      tag_20\n      jumpi\n        /* \"ErrorHandling.sol\":543:565  MyError(msg.sender, i) */\n      mload(0x40)\n      shl(0xe3, 0x1c473377)\n      dup2\n      mstore\n        /* \"ErrorHandling.sol\":551:561  msg.sender */\n      caller\n        /* \"ErrorHandling.sol\":543:565  MyError(msg.sender, i) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":373:424   */\n      mstore\n        /* \"#utility.yul\":440:458   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":433:467   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":346:364   */\n      0x44\n      add\n        /* \"ErrorHandling.sol\":543:565  MyError(msg.sender, i) */\n      tag_21\n        /* \"#utility.yul\":199:473   */\n      jump\n        /* \"#utility.yul\":14:194   */\n    tag_9:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_36\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_36:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":827:954   */\n    tag_26:\n        /* \"#utility.yul\":888:898   */\n      0x4e487b71\n        /* \"#utility.yul\":883:886   */\n      0xe0\n        /* \"#utility.yul\":879:899   */\n      shl\n        /* \"#utility.yul\":876:877   */\n      0x00\n        /* \"#utility.yul\":869:900   */\n      mstore\n        /* \"#utility.yul\":919:923   */\n      0x01\n        /* \"#utility.yul\":916:917   */\n      0x04\n        /* \"#utility.yul\":909:924   */\n      mstore\n        /* \"#utility.yul\":943:947   */\n      0x24\n        /* \"#utility.yul\":940:941   */\n      0x00\n        /* \"#utility.yul\":933:948   */\n      revert\n\n    auxdata: 0xa26469706673582212203de4f48a16438eaa63da800e4cf82289a244328e61236a67ce3383b8866666b164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260de60005534801561001557600080fd5b50610175806100256000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806320987767146100515780632b813bc01461006657806375f7286c1461006e578063b8bd717f14610051575b600080fd5b61006461005f366004610110565b610081565b005b6100646100d1565b61006461007c366004610110565b6100e5565b600a8111156100ce5760405162461bcd60e51b81526020600482015260146024820152730692069732067726561746572207468616e2031360641b60448201526064015b60405180910390fd5b50565b60005460de146100e3576100e3610129565b565b600a8111156100ce57604051631c47337760e31b8152336004820152602481018290526044016100c5565b60006020828403121561012257600080fd5b5035919050565b634e487b7160e01b600052600160045260246000fdfea26469706673582212203de4f48a16438eaa63da800e4cf82289a244328e61236a67ce3383b8866666b164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xDE PUSH1 0x0 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x175 DUP1 PUSH2 0x25 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x20987767 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x2B813BC0 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x75F7286C EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xB8BD717F EQ PUSH2 0x51 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x110 JUMP JUMPDEST PUSH2 0x81 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64 PUSH2 0xD1 JUMP JUMPDEST PUSH2 0x64 PUSH2 0x7C CALLDATASIZE PUSH1 0x4 PUSH2 0x110 JUMP JUMPDEST PUSH2 0xE5 JUMP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0xCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x692069732067726561746572207468616E20313 PUSH1 0x64 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xDE EQ PUSH2 0xE3 JUMPI PUSH2 0xE3 PUSH2 0x129 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0xCE JUMPI PUSH1 0x40 MLOAD PUSH4 0x1C473377 PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0xC5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE 0xE4 DELEGATECALL DUP11 AND NUMBER DUP15 0xAA PUSH4 0xDA800E4C 0xF8 0x22 DUP10 LOG2 DIFFICULTY ORIGIN DUP15 PUSH2 0x236A PUSH8 0xCE3383B8866666B1 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "56:528:0:-:0;;;95:3;84:14;;56:528;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@testAssert_48": {
									"entryPoint": 209,
									"id": 48,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@testCustomError_65": {
									"entryPoint": 229,
									"id": 65,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@testRequire_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@testRevert_38": {
									"entryPoint": 129,
									"id": 38,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0615d815158e89f41175f38bc6cabd0e4e4fae3281c182cf17291fc47c9a3372__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x01": {
									"entryPoint": 297,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:956:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "328:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "338:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "350:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "361:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "346:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "346:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "338:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "380:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "395:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "411:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "416:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "407:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "407:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "420:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "403:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "403:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "391:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "391:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "373:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "373:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "373:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "444:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "455:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "440:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "440:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "460:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "289:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "300:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "308:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "319:4:1",
														"type": ""
													}
												],
												"src": "199:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "652:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "669:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "680:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "662:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "662:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "662:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "703:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "714:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "699:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "699:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "719:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "692:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "692:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "692:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "742:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "753:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "738:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "738:18:1"
																	},
																	{
																		"hexValue": "692069732067726561746572207468616e203130",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "758:22:1",
																		"type": "",
																		"value": "i is greater than 10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "731:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "731:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "731:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "790:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "802:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "813:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "798:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "798:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "790:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0615d815158e89f41175f38bc6cabd0e4e4fae3281c182cf17291fc47c9a3372__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "629:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "643:4:1",
														"type": ""
													}
												],
												"src": "478:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "859:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "876:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "883:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "888:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "879:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "879:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "869:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "869:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "869:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "916:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "919:4:1",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "909:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "909:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "909:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "940:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "943:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "933:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "933:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "933:15:1"
														}
													]
												},
												"name": "panic_error_0x01",
												"nodeType": "YulFunctionDefinition",
												"src": "827:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_0615d815158e89f41175f38bc6cabd0e4e4fae3281c182cf17291fc47c9a3372__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"i is greater than 10\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x01()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c806320987767146100515780632b813bc01461006657806375f7286c1461006e578063b8bd717f14610051575b600080fd5b61006461005f366004610110565b610081565b005b6100646100d1565b61006461007c366004610110565b6100e5565b600a8111156100ce5760405162461bcd60e51b81526020600482015260146024820152730692069732067726561746572207468616e2031360641b60448201526064015b60405180910390fd5b50565b60005460de146100e3576100e3610129565b565b600a8111156100ce57604051631c47337760e31b8152336004820152602481018290526044016100c5565b60006020828403121561012257600080fd5b5035919050565b634e487b7160e01b600052600160045260246000fdfea26469706673582212203de4f48a16438eaa63da800e4cf82289a244328e61236a67ce3383b8866666b164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x20987767 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x2B813BC0 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x75F7286C EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xB8BD717F EQ PUSH2 0x51 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x110 JUMP JUMPDEST PUSH2 0x81 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64 PUSH2 0xD1 JUMP JUMPDEST PUSH2 0x64 PUSH2 0x7C CALLDATASIZE PUSH1 0x4 PUSH2 0x110 JUMP JUMPDEST PUSH2 0xE5 JUMP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0xCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x692069732067726561746572207468616E20313 PUSH1 0x64 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xDE EQ PUSH2 0xE3 JUMPI PUSH2 0xE3 PUSH2 0x129 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0xCE JUMPI PUSH1 0x40 MLOAD PUSH4 0x1C473377 PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0xC5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE 0xE4 DELEGATECALL DUP11 AND NUMBER DUP15 0xAA PUSH4 0xDA800E4C 0xF8 0x22 DUP10 LOG2 DIFFICULTY ORIGIN DUP15 PUSH2 0x236A PUSH8 0xCE3383B8866666B1 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "56:528:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;251:123;;;;;;:::i;:::-;;:::i;:::-;;380:69;;;:::i;455:127::-;;;;;;:::i;:::-;;:::i;251:123::-;309:2;305:1;:6;301:67;;;327:30;;-1:-1:-1;;;327:30:0;;680:2:1;327:30:0;;;662:21:1;719:2;699:18;;;692:30;-1:-1:-1;;;738:18:1;;;731:50;798:18;;327:30:0;;;;;;;;301:67;251:123;:::o;380:69::-;431:3;;438;431:10;424:18;;;;:::i;:::-;380:69::o;455:127::-;518:2;514:1;:6;510:66;;;543:22;;-1:-1:-1;;;543:22:0;;551:10;543:22;;;373:51:1;440:18;;;433:34;;;346:18;;543:22:0;199:274:1;14:180;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:1;;14:180;-1:-1:-1;14:180:1:o;827:127::-;888:10;883:3;879:20;876:1;869:31;919:4;916:1;909:15;943:4;940:1;933:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "74600",
								"executionCost": "22229",
								"totalCost": "96829"
							},
							"external": {
								"testAssert()": "2302",
								"testCustomError(uint256)": "360",
								"testRequire(uint256)": "393",
								"testRevert(uint256)": "327"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 56,
									"end": 584,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 56,
									"end": 584,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 56,
									"end": 584,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 95,
									"end": 98,
									"name": "PUSH",
									"source": 0,
									"value": "DE"
								},
								{
									"begin": 84,
									"end": 98,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 98,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 56,
									"end": 584,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 56,
									"end": 584,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56,
									"end": 584,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 56,
									"end": 584,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 584,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 56,
									"end": 584,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 584,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56,
									"end": 584,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 56,
									"end": 584,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 584,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 56,
									"end": 584,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 56,
									"end": 584,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 584,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56,
									"end": 584,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 584,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 584,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 56,
									"end": 584,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 584,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203de4f48a16438eaa63da800e4cf82289a244328e61236a67ce3383b8866666b164736f6c63430008070033",
									".code": [
										{
											"begin": 56,
											"end": 584,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 56,
											"end": 584,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56,
											"end": 584,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56,
											"end": 584,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 56,
											"end": 584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 584,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56,
											"end": 584,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 584,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56,
											"end": 584,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56,
											"end": 584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56,
											"end": 584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56,
											"end": 584,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56,
											"end": 584,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56,
											"end": 584,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 56,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56,
											"end": 584,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 584,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 56,
											"end": 584,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 56,
											"end": 584,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 56,
											"end": 584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 584,
											"name": "PUSH",
											"source": 0,
											"value": "20987767"
										},
										{
											"begin": 56,
											"end": 584,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 56,
											"end": 584,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 584,
											"name": "PUSH",
											"source": 0,
											"value": "2B813BC0"
										},
										{
											"begin": 56,
											"end": 584,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56,
											"end": 584,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 584,
											"name": "PUSH",
											"source": 0,
											"value": "75F7286C"
										},
										{
											"begin": 56,
											"end": 584,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 56,
											"end": 584,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 584,
											"name": "PUSH",
											"source": 0,
											"value": "B8BD717F"
										},
										{
											"begin": 56,
											"end": 584,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 56,
											"end": 584,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 584,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56,
											"end": 584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56,
											"end": 584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 584,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 251,
											"end": 374,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 251,
											"end": 374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 251,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 251,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 251,
											"end": 374,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 251,
											"end": 374,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 251,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 251,
											"end": 374,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 251,
											"end": 374,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 251,
											"end": 374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 251,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 251,
											"end": 374,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 251,
											"end": 374,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 251,
											"end": 374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 251,
											"end": 374,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 380,
											"end": 449,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 380,
											"end": 449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 380,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 380,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 380,
											"end": 449,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 455,
											"end": 582,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 455,
											"end": 582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 455,
											"end": 582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 455,
											"end": 582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 455,
											"end": 582,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 455,
											"end": 582,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 455,
											"end": 582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 455,
											"end": 582,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 455,
											"end": 582,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 455,
											"end": 582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 455,
											"end": 582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 455,
											"end": 582,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 251,
											"end": 374,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 251,
											"end": 374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 309,
											"end": 311,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 305,
											"end": 311,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 301,
											"end": 368,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 301,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 301,
											"end": 368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 327,
											"end": 357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 327,
											"end": 357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 680,
											"end": 682,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 327,
											"end": 357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 662,
											"end": 683,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 719,
											"end": 721,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 699,
											"end": 717,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 699,
											"end": 717,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 699,
											"end": 717,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 692,
											"end": 722,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "692069732067726561746572207468616E20313"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "64"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 738,
											"end": 756,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 731,
											"end": 781,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 798,
											"end": 816,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 798,
											"end": 816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 327,
											"end": 357,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 327,
											"end": 357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 327,
											"end": 357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 327,
											"end": 357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 327,
											"end": 357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 327,
											"end": 357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 327,
											"end": 357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 327,
											"end": 357,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 301,
											"end": 368,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 301,
											"end": 368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 251,
											"end": 374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 251,
											"end": 374,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 380,
											"end": 449,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 380,
											"end": 449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 431,
											"end": 434,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 431,
											"end": 434,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 438,
											"end": 441,
											"name": "PUSH",
											"source": 0,
											"value": "DE"
										},
										{
											"begin": 431,
											"end": 441,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 424,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 424,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 380,
											"end": 449,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 455,
											"end": 582,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 455,
											"end": 582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 518,
											"end": 520,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 514,
											"end": 515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 514,
											"end": 520,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 510,
											"end": 576,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 510,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 510,
											"end": 576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 543,
											"end": 565,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 543,
											"end": 565,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C473377"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 543,
											"end": 565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 543,
											"end": 565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 551,
											"end": 561,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 543,
											"end": 565,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 543,
											"end": 565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 543,
											"end": 565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 440,
											"end": 458,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 440,
											"end": 458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 440,
											"end": 458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 433,
											"end": 467,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 433,
											"end": 467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 433,
											"end": 467,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 346,
											"end": 364,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 346,
											"end": 364,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 543,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 199,
											"end": 473,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 827,
											"end": 954,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 827,
											"end": 954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 888,
											"end": 898,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 883,
											"end": 886,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 879,
											"end": 899,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 876,
											"end": 877,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 869,
											"end": 900,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 919,
											"end": 923,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 916,
											"end": 917,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 909,
											"end": 924,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 943,
											"end": 947,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 940,
											"end": 941,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 933,
											"end": 948,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"testAssert()": "2b813bc0",
							"testCustomError(uint256)": "75f7286c",
							"testRequire(uint256)": "b8bd717f",
							"testRevert(uint256)": "20987767"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"MyError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"testAssert\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"testCustomError\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"testRequire\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"testRevert\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ErrorHandling.sol\":\"ErrorHandling\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ErrorHandling.sol\":{\"keccak256\":\"0x3ae9c2a88b3396dce367e2383c47ee1601112b50376fca585531454cf0154f1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ed0d889e6dd849b5a3dcf7b4bbb97dd8edb481b00548c1502e2575b83c4a51f\",\"dweb:/ipfs/Qmf8Zc9x6arFeQrjP99qfe3tUg3mZ8hjpTBtKxEX3zqk7j\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "ErrorHandling.sol:ErrorHandling",
								"label": "num",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"ErrorHandling.sol": {
				"ast": {
					"absolutePath": "ErrorHandling.sol",
					"exportedSymbols": {
						"ErrorHandling": [
							66
						]
					},
					"id": 67,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 66,
							"linearizedBaseContracts": [
								66
							],
							"name": "ErrorHandling",
							"nameLocation": "65:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "num",
									"nameLocation": "89:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 66,
									"src": "84:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "84:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323232",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "95:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_222_by_1",
											"typeString": "int_const 222"
										},
										"value": "222"
									},
									"visibility": "internal"
								},
								{
									"id": 10,
									"name": "MyError",
									"nameLocation": "111:7:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "127:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "119:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "119:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "i",
												"nameLocation": "138:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "133:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "133:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "118:22:0"
									},
									"src": "105:36:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "188:57:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "206:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3130",
																"id": 17,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "211:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"src": "206:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "692069732067726561746572207468616e203130",
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "215:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0615d815158e89f41175f38bc6cabd0e4e4fae3281c182cf17291fc47c9a3372",
																"typeString": "literal_string \"i is greater than 10\""
															},
															"value": "i is greater than 10"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0615d815158e89f41175f38bc6cabd0e4e4fae3281c182cf17291fc47c9a3372",
																"typeString": "literal_string \"i is greater than 10\""
															}
														],
														"id": 15,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "198:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "198:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "198:40:0"
											}
										]
									},
									"functionSelector": "b8bd717f",
									"id": 23,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "testRequire",
									"nameLocation": "156:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "i",
												"nameLocation": "173:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "168:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "168:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "167:8:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "188:0:0"
									},
									"scope": 66,
									"src": "147:98:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "291:83:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 28,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "305:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3130",
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "309:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "305:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 36,
												"nodeType": "IfStatement",
												"src": "301:67:0",
												"trueBody": {
													"id": 35,
													"nodeType": "Block",
													"src": "313:55:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "692069732067726561746572207468616e203130",
																		"id": 32,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "334:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_0615d815158e89f41175f38bc6cabd0e4e4fae3281c182cf17291fc47c9a3372",
																			"typeString": "literal_string \"i is greater than 10\""
																		},
																		"value": "i is greater than 10"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_0615d815158e89f41175f38bc6cabd0e4e4fae3281c182cf17291fc47c9a3372",
																			"typeString": "literal_string \"i is greater than 10\""
																		}
																	],
																	"id": 31,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "327:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "327:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 34,
															"nodeType": "ExpressionStatement",
															"src": "327:30:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "20987767",
									"id": 38,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "testRevert",
									"nameLocation": "260:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "i",
												"nameLocation": "276:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "271:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "271:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "270:8:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "291:0:0"
									},
									"scope": 66,
									"src": "251:123:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 47,
										"nodeType": "Block",
										"src": "414:35:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 42,
																"name": "num",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "431:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "323232",
																"id": 43,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "438:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_222_by_1",
																	"typeString": "int_const 222"
																},
																"value": "222"
															},
															"src": "431:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 41,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "424:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "424:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "424:18:0"
											}
										]
									},
									"functionSelector": "2b813bc0",
									"id": 48,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "testAssert",
									"nameLocation": "389:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "399:2:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "414:0:0"
									},
									"scope": 66,
									"src": "380:69:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "500:82:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 53,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "514:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3130",
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "518:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "514:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 63,
												"nodeType": "IfStatement",
												"src": "510:66:0",
												"trueBody": {
													"id": 62,
													"nodeType": "Block",
													"src": "522:54:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 57,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "551:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 58,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "551:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 59,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 50,
																		"src": "563:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 56,
																	"name": "MyError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "543:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) pure"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "543:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 61,
															"nodeType": "RevertStatement",
															"src": "536:29:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "75f7286c",
									"id": 65,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "testCustomError",
									"nameLocation": "464:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "i",
												"nameLocation": "485:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "480:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "480:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "479:8:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "500:0:0"
									},
									"scope": 66,
									"src": "455:127:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 67,
							"src": "56:528:0",
							"usedErrors": [
								10
							]
						}
					],
					"src": "32:552:0"
				},
				"id": 0
			}
		}
	}
}